# AUTOGENERATED! DO NOT EDIT! File to edit: ../03_Boostrap_correlation.ipynb.

# %% auto 0
__all__ = ['bootstrap_cells', 'digestion_profile_matrix', 'correlate_sequence', 'cross_correlation_on_all_sequences',
           'bootstrap_cross_correlation']

# %% ../03_Boostrap_correlation.ipynb 4
import pandas as pd
import numpy as np
from scipy.signal import correlate

# %% ../03_Boostrap_correlation.ipynb 10
def bootstrap_cells(df, n_sample):
    selected_cells = np.random.choice(df.cb_encode.unique(), size=n_sample)
    subsampled_df = df.set_index('cb_encode').loc[selected_cells,:].reset_index()
    return subsampled_df


# %% ../03_Boostrap_correlation.ipynb 12
def digestion_profile_matrix(df, aggregation='mean'):
    averages = df.groupby(['seq','log_units_mnase']).aggregate(aggregation).reset_index()
    averages = averages.sort_values('log_units_mnase').reset_index(drop=True)
    dig_matrix = averages.pivot(index='seq', columns='log_units_mnase', values='counts').fillna(0)
    return dig_matrix


# %% ../03_Boostrap_correlation.ipynb 14
def correlate_sequence(row, other, seq_name):
    try:
        other_row = other.loc[seq_name, :]
        cc = correlate(row, other_row, "full")
        return cc
    except KeyError:
        return [np.nan] * 27

# %% ../03_Boostrap_correlation.ipynb 16
def cross_correlation_on_all_sequences(g0_profile, inter_profile):
    corr_df = pd.DataFrame(np.zeros((g0_profile.shape[0], 27)), index=g0_profile.index, columns=list(range(-13, 14)))

    for nm,row in g0_profile.iterrows():
        corr = correlate_sequence(row, inter_profile, nm)
        corr_df.loc[nm, :] = corr
    corr_df = corr_df.dropna()
    return corr_df


# %% ../03_Boostrap_correlation.ipynb 17
def bootstrap_cross_correlation(seqcell, populations= [0,1], samples_bootstrap=200, n_iter=100):    
    cross_correlations = []

    for _ in range(n_iter):
        all_g0 = seqcell.loc[seqcell['sort_population']==populations[0]]
        g0_boot = bootstrap_cells(all_g0, samples_bootstrap)
        g0_digprof = digestion_profile_matrix(g0_boot)

        all_inter = seqcell.loc[seqcell['sort_population']==populations[1]]
        inter_boot = bootstrap_cells(all_inter, samples_bootstrap)
        inter_digprof = digestion_profile_matrix(inter_boot)

        cc = cross_correlation_on_all_sequences(g0_digprof, inter_digprof)

        cross_correlations.append(cc)
    cat_correlations = pd.concat(cross_correlations, axis=0, join='inner')
    mean_cc = cat_correlations.groupby(cat_correlations.index).mean()
    se_cc = cat_correlations.groupby(cat_correlations.index).sem()
    max_cc = mean_cc.idxmax(axis = 1)
    return mean_cc, se_cc, max_cc
